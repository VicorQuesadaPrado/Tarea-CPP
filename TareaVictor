#include <iostream>
using namespace std;
class Students
{
private:
    string name;
public:
    void setName(string name_) {
        name = name_;
    }
    string getName() {
        return name;
    }
    Students() {
        setName("");
    };
    Students(string name_) {

    };
    void imprimir() {
        cout << getName();
    }
};
//-----------------------------------------------------------------
class Subjects
{
private:
    string nameM;
public:
    void setNameM(string nameM_) {
        nameM = nameM_;
    }
    string getNameM() {
        return nameM;
    }
    Subjects() {
        setNameM("");
    };
    Subjects(string nameM_) {

    };
    void imprimir() {
        cout << getNameM();
    }
};
//-----------------------------------------------------------------
void llenarVector(Students vector[], int x) {
    string name;
    for (int i = 0; i < x; i++) {
        cout << "digite el nombre del estudiante # " << i << endl;
        cin >> name;
        vector[i].setName(name);
    }
};
//-----------------------------------------------------------------
void llenarVector2(Subjects vector2[], int x) {
    string materia;
    for (int i = 0; i < x; i++) {
        cout << "digite el nombre de la materia # " << i << endl;
        cin >> materia;
        vector2[i].setNameM(materia);
    }
};
//-----------------------------------------------------------------
void llenarM(int m[100][100], Students vector[], Subjects vector2[], int materias, int estudiantes) {
    for (int i = 0; i < materias; i++) {
        for (int j = 0; j < estudiantes; j++) {
            if (m[i][j] == NULL) {
                int nota;
                cout << "Digite la nota de la materia " << vector2[i].getNameM() << " del estudiante " << vector[j].getName() << endl;
                cin >> nota;
                m[i][j] = nota;
            }
        }
    }
};
//-----------------------------------------------------------------
void iniciar1(int m[100][100], int estudiantes, int materias) {
    for (int i = 0; i < materias; i++) {
        for (int j = 0; j < estudiantes; j++) {
            m[i][j] = NULL;
        }
    }
}
//-----------------------------------------------------------------
void imprimir(Students vector[], Subjects vector2[], int m[100][100], int materias, int estudiantes) {
    cout << "______________________________________" << endl;
    for (int i = 0; i < materias; i++) {
        if (i == 0) {
            cout << "         " << "Students        ";
        }
        for (int j = 0; j < estudiantes; j++) {
            if (i == 0) {

                vector[j].imprimir();
            }
            else if (i != 0 &&j !=0) {
                cout << "  " << m[i-1][j-1];
            }
        }
        cout << endl;
        if (i == 0) {
            cout << "Subjects Grades    ";
            vector2[i].imprimir();
        }
        else if (i != 0) {
            cout << "                   ";
            vector2[i].imprimir();
        }
        cout << endl;
        cout << "______________________________________" << endl;
    }
};
//-----------------------------------------------------------------
string estado(int nota) {
    if (nota < 50) {
        return "Reprobado";
    }
    else  if (nota <= 69 && nota >50) {
        return "Parcial";
    }
    else  if (nota >= 70) {
        return "Aprobado";
    }
    else  if (nota == 0 || nota == NULL) {
        return "Nota no definida ";
    }
}
//-----------------------------------------------------------------
void estadoEstudiantes(int opc, Students vector[], int m[100][100], int materias, int estudiantes) {
    string clave;
    int cont = 0;
    if (opc == 1) {
        clave = "Reprobado";
    }
    else if (opc == 2) {
        clave = "Parcial";
    }
    else if (opc == 3) {
        clave = "Aprobado";
    }
    else if (opc == 4) {
        clave = "Nota no definida ";
    }
    for (int i = 0; i < estudiantes; i++) {
        for (int j = 0; j < materias; j++) {
            if (estado(m[j][i]) == clave) {
                cont++;
            }
            else {
                j = 0;
                i++;
            }
            if (cont == materias) {
                vector[i].imprimir();
                cout << endl;
            }

        }
    }
}
//-----------------------------------------------------------------

void estadoMaterias(int materia, int m[100][100], int estudiantes) {
    int cont = 0;
    int promedio=0;
    int maximo = m[materia][0];
    int minimo = m[materia][0];

    for (int i = 0; i < estudiantes; i++) {
        if (m[materia][i] == NULL || m[materia][i] == 0) {
            promedio = promedio + 0;
        }
        else if (m[materia][i] != 0) {
            if (maximo < m[materia][i]) {
                maximo = m[materia][i];
                promedio = promedio + m[materia][i];
            }
            else if (minimo > m[materia][i]) {
                minimo = m[materia][i];
                promedio = promedio + m[materia][i];
            }


            cont++;
        }
    }
    cout << "La nota maxima nota es= " << maximo << endl;
    cout << "La nota minima es= " << minimo << endl;
    cout << "El promedio es= " << promedio / cont << endl;
    cout << "Cantidad total de estudiantes que poseen una nota= " << cont << endl;

}


//-----------------------------------------------------------------
void reporte(int estudiante, int materias, int estudiantes, int m[100][100], Students vector[], Subjects vector2[]) {
    system("cls");
    int opc;
    cout << "______________________________________" << endl;
    cout << "Reporte de estudiantes" << endl;
    cout << endl;
    cout << "Listado de todas las notas y estudiantes" << endl;
    imprimir(vector, vector2, m, materias, estudiantes);
    cout << "______________________________________" << endl;
    cout << "Notas del estudiante: " << vector[estudiante].getName() << endl;
    for (int i = 0; i < materias; i++) {
        vector2[i].imprimir();
        cout << endl;
        cout << m[i][estudiante] << endl;
        cout << estado(m[i][estudiante]);
        cout << endl;
    }
    cout << "______________________________________" << endl;
    cout << "Estudiantes en un estado especifico en todas las materias" << endl;
    cout << "Digite 1 si quiere saber los que reprobaron" << endl;
    cout << "Digite 2 si quiere saber los que pueden ir al parcial" << endl;
    cout << "Digite 3 si quiere saber los que aprobaron" << endl;
    cout << "Digite 4 si quiere saber los que no tienen nota definida" << endl;
    cin >> opc;
    cout << "______________________________________" << endl;
    cout << "Listado de estudiantes que cumplen con lo buscado:" << endl;
    estadoEstudiantes(opc, vector, m, materias, estudiantes);
    cout << "______________________________________" << endl;
    cout << "Resumen de las materias" << endl;
    cout << endl;
    for (int i = 0; i < materias; i++) {
        cout << vector2[i].getNameM() << ": " << endl;
        estadoMaterias(i, m, estudiantes);
        cout << endl;
        cout << "______________________________________" << endl;
    }




}

//-----------------------------------------------------------------
int main()

{
    int option;
    int static materias;
    int static estudiantes;
    int  m[100][100];


    cout << "Bienvenido al sistema" << endl;
    cout << "______________________________________" << endl;
    cout << "Digite 1 si quiere empezar de 0" << endl;
    cout << "Digite 2 si quiere iniciar con datos" << endl;
    cout << "Digite 0 si quiere salir del programa" << endl;
    cout << "______________________________________" << endl;
    cin >> option;
    system("cls");
    cout << "Digite la cantidad de estudiantes " << endl;
    cin >> estudiantes;
    cout << "Digite la cantidad de materias" << endl;
    cin >> materias;
    iniciar1(m, estudiantes, materias);
    Students vector[100];
    Subjects vector2[100];
    if (option == 1) {
        int opc;
        system("cls");
        llenarVector(vector, estudiantes);
        llenarVector2(vector2, materias);
        llenarM(m, vector, vector2, materias, estudiantes);

        imprimir(vector, vector2, m, materias, estudiantes);
        cout << "Digite el numero de estudiante que quiera revisar las notas" << endl;
        cin >> opc;
        reporte(opc, materias, estudiantes, m, vector, vector2);


    }

    else if (option == 2) {
        system("cls");
      
    }
    else if (option == 0) {
        system("cls");
    }
    else {
        system("cls");
        cout << "Digito una opcion invalida, ejecucion terminada" << endl;
    }
}

